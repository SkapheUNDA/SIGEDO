package la.netco.persistencia.dto.commons.base;
// Generated 9/10/2012 04:26:59 PM by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

import la.netco.core.persistencia.vo.Usuario;

/**
 * Rolname generated by hbm2java
 */
@Entity
@Table(name = "ROLNAME", schema = "dbo", catalog = "AUTOR")
public class Rolname implements java.io.Serializable {

    private short rlnId;
    private String rlnNom;
    private Set<Usuario> usuarios = new HashSet<Usuario>(0);
    private Set<Objeto> objetos = new HashSet<Objeto>(0);
    private Set<Perfil> perfils = new HashSet<Perfil>(0);

    public Rolname() {
    }

    public Rolname(short rlnId) {
        this.rlnId = rlnId;
    }

    public Rolname(short rlnId, String rlnNom, Set<Usuario> usuarios, Set<Objeto> objetos, Set<Perfil> perfils) {
        this.rlnId = rlnId;
        this.rlnNom = rlnNom;
        this.usuarios = usuarios;
        this.objetos = objetos;
        this.perfils = perfils;
    }

    @Id
    @GeneratedValue(strategy= GenerationType.IDENTITY)
    @Column(name = "RLN_ID", unique = true, nullable = false)
    public short getRlnId() {
        return this.rlnId;
    }

    public void setRlnId(short rlnId) {
        this.rlnId = rlnId;
    }

    @Column(name = "RLN_NOM", length = 50)
    public String getRlnNom() {
        return this.rlnNom;
    }

    public void setRlnNom(String rlnNom) {
        this.rlnNom = rlnNom;
    }

    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "ROLUSUARIO", schema = "dbo", catalog = "AUTOR", joinColumns = {
        @JoinColumn(name = "RUS_RLN", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "RUS_USR", nullable = false, updatable = false)})
    public Set<Usuario> getUsuarios() {
        return this.usuarios;
    }

    public void setUsuarios(Set<Usuario> usuarios) {
        this.usuarios = usuarios;
    }

    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "ROL", schema = "dbo", catalog = "AUTOR", joinColumns = {
        @JoinColumn(name = "ROL_RLN", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "ROL_OBJ", nullable = false, updatable = false)})
    public Set<Objeto> getObjetos() {
        return this.objetos;
    }

    public void setObjetos(Set<Objeto> objetos) {
        this.objetos = objetos;
    }

    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "ROLPERFIL", schema = "dbo", catalog = "AUTOR", joinColumns = {
        @JoinColumn(name = "RPF_RLN", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "RPF_PRF", nullable = false, updatable = false)})
    public Set<Perfil> getPerfils() {
        return this.perfils;
    }

    public void setPerfils(Set<Perfil> perfils) {
        this.perfils = perfils;
    }
}
