package la.netco.persistencia.dto.commons;
// Generated 9/10/2012 04:26:59 PM by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import la.netco.core.persistencia.vo.Schemas;

/**
 * Clasificacion generated by hbm2java
 */
@Entity
@Table(name = "CLASIFICACION", schema = Schemas.DBO_SCHEMA, uniqueConstraints =
@UniqueConstraint(columnNames = {"CLA_NOM", "CLA_TIP"}))

@NamedQueries({
	@NamedQuery(name=Clasificacion.NAMED_QUERY_ALL_CLASIFICACION,query=Clasificacion.QUERY_ALL_CLASIFICACION),
	@NamedQuery(name=Clasificacion.NAMED_QUERY_ALL_BY_TRAMITE,query=Clasificacion.QUERY_ALL_BY_TIPO_TRAMITE),
	@NamedQuery(name=Clasificacion.NAMED_QUERY_ALL_BY_TIPO_DEPENDENCIA,query=Clasificacion.QUERY_ALL_BY_TIPO_DEPENDENCIA)
	})
public class Clasificacion implements java.io.Serializable {


	private static final long serialVersionUID = 1L;
	private short claId;
	private Tramite tramite;
    private String claCod;
    private String claNom;
    private byte claTip;
    private boolean claLrta;
    private Short claTie;
    private String claTit;
    private Byte claTrt;
    private boolean claLreg;
    private Set<Asignaclasificacion> asignaclasificacions = new HashSet<Asignaclasificacion>();
/*    private Set<Anexo> anexos = new HashSet<Anexo>(0);
    private Set<Salida> salidas = new HashSet<Salida>(0);
    private Set<Asignaclasificacion> asignaclasificacions = new HashSet<Asignaclasificacion>(0);*/

    
    public static byte TIPO_ENTRADA = 1;
    public static byte TIPO_SALIDA	= 2;
    
    public static Short CAL_INI_REGISTRO =90;
    public static Short CAL_FIN_REGISTRO =99;
    public static Short EXP_CER_REGISTRO =214;
    
    public Clasificacion() {
    }

    public Clasificacion(short claId, byte claTip, boolean claLrta, boolean claLreg) {
        this.claId = claId;
        this.claTip = claTip;
        this.claLrta = claLrta;
        this.claLreg = claLreg;
    }

    public Clasificacion(short claId, Tramite tramite, String claCod, String claNom, byte claTip, boolean claLrta, Short claTie, String claTit, Byte claTrt, boolean claLreg, Set<Anexo> anexos, Set<Salida> salidas, Set<Asignaclasificacion> asignaclasificacions) {
        this.claId = claId;
      //  this.tramite = tramite;
        this.claCod = claCod;
        this.claNom = claNom;
        this.claTip = claTip;
        this.claLrta = claLrta;
        this.claTie = claTie;
        this.claTit = claTit;
        this.claTrt = claTrt;
        this.claLreg = claLreg;
      /*  this.anexos = anexos;
        this.salidas = salidas;
        this.asignaclasificacions = asignaclasificacions;*/
    }

    @Id
    @GeneratedValue(strategy= GenerationType.IDENTITY)
    @Column(name = "CLA_ID", unique = true, nullable = false)
    public short getClaId() {
        return this.claId;
    }

    public void setClaId(short claId) {
        this.claId = claId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLA_TRM")
    public Tramite getTramite() {
        return this.tramite;
    }

    public void setTramite(Tramite tramite) {
        this.tramite = tramite;
    }

    @Column(name = "CLA_COD", length = 20)
    public String getClaCod() {
        return this.claCod;
    }

    public void setClaCod(String claCod) {
        this.claCod = claCod;
    }

    /**
     * 
     * Retorna nombre de la Clasificación
     * 
     * @return claNom
     */
    @Column(name = "CLA_NOM", length = 100)
    public String getClaNom() {
        return this.claNom;
    }

    public void setClaNom(String claNom) {
        this.claNom = claNom;
    }

    @Column(name = "CLA_TIP", nullable = false)
    public byte getClaTip() {
        return this.claTip;
    }

    public void setClaTip(byte claTip) {
        this.claTip = claTip;
    }

    /**
     * Retorna si requiere respuesta
     * 
     * @return claLrta
     */
    @Column(name = "CLA_LRTA", nullable = false)
    public boolean isClaLrta() {
        return this.claLrta;
    }

    public void setClaLrta(boolean claLrta) {
        this.claLrta = claLrta;
    }

    /**
     * Retorna el tiempo de respuesta
     * 
     * @return claTie
     */
    @Column(name = "CLA_TIE")
    public Short getClaTie() {
        return this.claTie;
    }

    public void setClaTie(Short claTie) {
        this.claTie = claTie;
    }

    @Column(name = "CLA_TIT", length = 50)
    public String getClaTit() {
        return this.claTit;
    }

    public void setClaTit(String claTit) {
        this.claTit = claTit;
    }

    /**
     * 
     * Retorna si el tiempo limite es en días hábiles o calendario
     * 
     * @return claTrt
     */
    @Column(name = "CLA_TRT")
    public Byte getClaTrt() {
        return this.claTrt;
    }

    public void setClaTrt(Byte claTrt) {
        this.claTrt = claTrt;
    }

    @Column(name = "CLA_LREG", nullable = false)
    public boolean isClaLreg() {
        return this.claLreg;
    }

    public void setClaLreg(boolean claLreg) {
        this.claLreg = claLreg;
    }
    
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "clasificacion")
    public Set<Asignaclasificacion> getAsignaclasificacions() {
        return this.asignaclasificacions;
    }

    public void setAsignaclasificacions(Set<Asignaclasificacion> asignaclasificacions) {
        this.asignaclasificacions = asignaclasificacions;
    }

   /* @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "ANEXOCLASIFICACION", schema = "dbo", catalog = "AUTOR", joinColumns = {
        @JoinColumn(name = "ANC_CLA", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "ANC_ANX", nullable = false, updatable = false)})
    public Set<Anexo> getAnexos() {
        return this.anexos;
    }

    public void setAnexos(Set<Anexo> anexos) {
        this.anexos = anexos;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "clasificacion")
    public Set<Salida> getSalidas() {
        return this.salidas;
    }

    public void setSalidas(Set<Salida> salidas) {
        this.salidas = salidas;
    }

*/
    
    public static final String NAMED_QUERY_ALL_CLASIFICACION = "getAllClasificaciones";
    public static final String QUERY_ALL_CLASIFICACION = "FROM Clasificacion clasificacion order by clasificacion.claNom asc";
    
    
    public static final String NAMED_QUERY_ALL_BY_TIPO_DEPENDENCIA = "getAllClasificacionByTipo";
    public static final String QUERY_ALL_BY_TIPO_DEPENDENCIA  = " Select DISTINCT clasificacion FROM Clasificacion clasificacion  INNER JOIN clasificacion.asignaclasificacions asignacion INNER JOIN asignacion.depend depend WHERE  clasificacion.claTip = ? AND depend.depId = ? order by clasificacion.claNom asc";
    
    public static final String NAMED_QUERY_ALL_BY_TRAMITE = "getAllClasificacionByTramite";
    public static final String QUERY_ALL_BY_TIPO_TRAMITE  = " Select DISTINCT clasificacion FROM Clasificacion clasificacion WHERE clasificacion.claTip = ? AND clasificacion.tramite.trmId = ? order by clasificacion.claNom asc";
    
}
